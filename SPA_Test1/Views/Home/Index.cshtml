@using SPA_Test1.Models
@using SPA_Test1.Models.Helpers
@model SPA_Test1.ViewModels.UsersViewModel

@{
    ViewBag.Title = "Страница пользователей";
}

@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    <div class="container mt-5">
	    <h2>Пользователей (@Model.TotalCount всего)</h2>
        
        <!--Переход по страницам-->
	    <div class="d-flex justify-content-between align-items-center mb-3">
	        <div class="btn-group">
		        @if (Model.PageNumber > 1)
		        {
			        <button type="submit" name="page" value="1" class="btn btn-outline-primary">Первая</button>
			        <button type="submit" name="page" value="@(Model.PageNumber - 1)" class="btn btn-outline-primary">Предыдущая</button>
		        }
                
                <!--Кнопки переключения страниц-->
		        @for (int i = Math.Max(1, Model.PageNumber - 3); i <= Math.Min(Model.PageNumber + 3, Model.TotalPages); i++)
		        {
			        <button type="submit" name="page" value="@i" class="btn @(i == Model.PageNumber ? "btn-primary" : "btn-outline-primary")">@i</button>
		        }
                
		        @if (Model.PageNumber < Model.TotalPages)
		        {
			        <button type="submit" name="page" value="@(Model.PageNumber + 1)" class="btn btn-outline-primary">Следуюшая</button>
			        <button type="submit" name="page" value="@Model.TotalPages" class="btn btn-outline-primary">Последняя</button>
		        }
	        </div>
            
	        <div class="input-group" style="width: 200px;">
		        <span class="input-group-text">Пользователей:</span>
		        <select name="pageSize" class="form-select" onchange="this.form.submit()">
			        @foreach (var size in new[] { 5, 10, 25, 50, 100 })
			        {
				        <option value="@size" @(Model.PageSize == size ? "selected=\"selected\"" : "")>@size</option>
			        }
		        </select>
		        <!-- Скрытое поле для сохранения текущей страницы -->
		        <input type="hidden" name="page" value="1" /> <!-- Всегда сбрасываем на первую страницу при изменении размера -->
	        </div>
        </div>

        <!-- Таблица данных -->
        <table class="table table-striped table-bordered">
            @{
                var fieldNames = Extensions.GetDisplayNames(typeof(User));
                <thead>
                    <tr>
                        @{
                            foreach (var fieldName in fieldNames)
                            {
                                <th>@fieldName</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Items)
                    {
                        <tr>
                            @foreach (var fieldName in fieldNames)
                            {
                                <td>@user.GetFieldValueByDisplayName(fieldName)</td>
                            }
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>
}